package com.igate.controller;

import java.io.Console;
import java.io.File;
import java.io.IOException;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItem;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartRequest;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.igate.form.FileUploadForm;

@Controller
public class FileUploadController {

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public String save(@ModelAttribute("uploadForm") FileUploadForm uploadForm,
			Model map) throws IOException {

		MultipartFile multipartFile = uploadForm.getFile();
		CommonsMultipartFile commonsMultipartFile = (CommonsMultipartFile) multipartFile;
		FileItem fileItem = commonsMultipartFile.getFileItem();
		DiskFileItem diskFileItem = (DiskFileItem) fileItem;
		String absPath = diskFileItem.getStoreLocation().getAbsolutePath();
		System.out.println(absPath);
		File file = new File(absPath);

		//trick to implicitly save on disk small files (<10240 bytes by default)

		if (!file.exists()) {
		    file.createNewFile();
		    multipartFile.transferTo(file);
		}
		String fileName = "";

		if (multipartFile != null) {
			fileName = multipartFile.getOriginalFilename();
			System.out.println("File Size: "+ multipartFile.getSize() + " bytes"); 
			System.out.println("successfully uploaded"); 
		}
		
		return "success";
	}


}
